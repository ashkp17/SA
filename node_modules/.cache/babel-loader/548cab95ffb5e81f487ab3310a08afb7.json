{"ast":null,"code":"import _slicedToArray from \"C:\\\\dev\\\\SA\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\SA\\\\src\\\\components\\\\App.jsx\";\nimport React, { useRef, useState, useCallback } from \"react\";\nimport produce from \"immer\";\nvar noRows = 30;\nvar noCols = 30;\nvar redun = [[0.1], [0, -1], [1, -1], [-1, 1], [1, 1], [-1, -1], [1, 0], [-1, 0]];\n\nfunction App() {\n  var _this = this;\n\n  var gridGenerator = function gridGenerator() {\n    var rows = [];\n\n    for (var i = 0; i < noRows; i++) {\n      rows.push(Array.from(Array(noCols), function () {\n        return 0;\n      }));\n    }\n\n    return rows;\n  };\n\n  var _useState = useState(function () {\n    return gridGenerator();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrid = _useState2[1];\n\n  var genRandomGame = function genRandomGame() {\n    var rows = [];\n\n    for (var i = 0; i < noRows; i++) {\n      rows.push(Array.from(Array(noCols), function () {\n        return Math.random() > 0.5 ? 1 : 0;\n      }));\n    }\n\n    return rows;\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Simulation = _useState4[0],\n      setSimulation = _useState4[1];\n\n  var runningRef = useRef(Simulation);\n  runningRef.current = Simulation;\n  var runSimulation = useCallback(function () {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(function (g) {\n      return produce(g, function (gridCopy) {\n        var _loop = function _loop(i) {\n          var _loop2 = function _loop2(k) {\n            var neighbors = 0;\n            redun.forEach(function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                  x = _ref2[0],\n                  y = _ref2[1];\n\n              var newI = i + x;\n              var newK = k + y;\n\n              if (newI >= 0 && newK >= 0 && newI < noRows && newK < noCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          };\n\n          for (var k = 0; k < noCols; k++) {\n            _loop2(k);\n          }\n        };\n\n        for (var i = 0; i < noRows; i++) {\n          _loop(i);\n        }\n      });\n    });\n    setTimeout(runSimulation, 100);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      justifyContent: \"center\",\n      gridTemplateColumns: \"repeat(\".concat(noCols, \", 20px)\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, grid.map(function (rows, i) {\n    return rows.map(function (col, k) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table\",\n        onClick: function onClick() {\n          var newGrid = produce(grid, function (gridCopy) {\n            gridCopy[i][k] = grid[i][k] ? 0 : 1;\n          });\n          setGrid(newGrid);\n        },\n        key: \"\".concat(i, \"-\").concat(k),\n        style: {\n          width: 15,\n          height: 15,\n          background: grid[i][k] ? \"#000\" : undefined\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      });\n    });\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setGrid(genRandomGame());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Random Stimulation\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setSimulation(!Simulation);\n\n      if (!Simulation) {\n        runningRef.current = true;\n        runSimulation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, Simulation ? \"Stop\" : \"start\", \" Simulation\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setGrid(gridGenerator());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"space-between\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/dev/SA/src/components/App.jsx"],"names":["React","useRef","useState","useCallback","produce","noRows","noCols","redun","App","gridGenerator","rows","i","push","Array","from","grid","setGrid","genRandomGame","Math","random","Simulation","setSimulation","runningRef","current","runSimulation","g","gridCopy","k","neighbors","forEach","x","y","newI","newK","setTimeout","display","justifyContent","gridTemplateColumns","map","col","newGrid","width","height","background","undefined","flexDirection","textAlign"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback } from \"react\";\nimport produce from \"immer\";\n\nconst noRows = 30;\nconst noCols = 30;\n\nconst redun = [\n  [0.1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0]\n];\n\nfunction App() {\n  const gridGenerator = () => {\n    const rows = [];\n    for (let i = 0; i < noRows; i++) {\n      rows.push(Array.from(Array(noCols), () => 0));\n    }\n    return rows;\n  };\n\n  const [grid, setGrid] = useState(() => {\n    return gridGenerator();\n  });\n\n  const genRandomGame = () => {\n    const rows = [];\n    for (let i = 0; i < noRows; i++) {\n      rows.push(\n        Array.from(Array(noCols), () => (Math.random() > 0.5 ? 1 : 0))\n      );\n    }\n    return rows;\n  };\n\n  const [Simulation, setSimulation] = useState(false);\n\n  const runningRef = useRef(Simulation);\n  runningRef.current = Simulation;\n\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n    setGrid((g) => {\n      return produce(g, (gridCopy) => {\n        for (let i = 0; i < noRows; i++) {\n          for (let k = 0; k < noCols; k++) {\n            let neighbors = 0;\n            redun.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              if (newI >= 0 && newK >= 0 && newI < noRows && newK < noCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n    setTimeout(runSimulation, 100);\n  }, []);\n\n  return (\n    <>\n  \n      <div\n        style={{\n          display: \"grid\",\n          justifyContent: \"center\",\n          gridTemplateColumns: `repeat(${noCols}, 20px)`\n        }}\n      >\n        {grid.map((rows, i) =>\n          rows.map((col, k) => (\n            <div\n              className=\"table\"\n              onClick={() => {\n                const newGrid = produce(grid, (gridCopy) => {\n                  gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}\n              key={`${i}-${k}`}\n              style={{\n                width: 15,\n                height: 15,\n                background: grid[i][k] ? \"#000\" : undefined\n              }}\n            ></div>\n          ))\n        )}\n      </div>\n      <button\n          onClick={() => {\n            setGrid(genRandomGame());\n          }}\n        >\n          Random Stimulation\n        </button>\n      <button\n        onClick={() => {\n          setSimulation(!Simulation);\n          if (!Simulation) {\n            runningRef.current = true;\n            runSimulation();\n          }\n        }}\n      >\n        {Simulation ? \"Stop\" : \"start\"} Simulation\n      </button>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        }}\n      >\n        <button\n          onClick={() => {\n            setGrid(gridGenerator());\n          }}\n        >\n          Reset\n        </button>\n        \n      </div>\n      <div style={{ justifyContent: \"space-between\", textAlign: \"left\" }}>\n       \n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}