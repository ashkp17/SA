{"ast":null,"code":"import _slicedToArray from\"C:\\\\dev\\\\SA\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useCallback}from\"react\";import produce from\"immer\";var numRows=30;var numCols=30;var redundant=[[0.1],[0,-1],[1,-1],[-1,1],[1,1],[-1,-1],[1,0],[-1,0]];function App(){var generateEmptyGrid=function generateEmptyGrid(){var rows=[];for(var i=0;i<numRows;i++){rows.push(Array.from(Array(numCols),function(){return 0;}));}return rows;};var _useState=useState(function(){return generateEmptyGrid();}),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];var generateRandomStuff=function generateRandomStuff(){var rows=[];for(var i=0;i<numRows;i++){rows.push(Array.from(Array(numCols),function(){return Math.random()>0.5?1:0;}));}return rows;};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),Simulation=_useState4[0],setSimulation=_useState4[1];var runningRef=useRef(Simulation);runningRef.current=Simulation;var runSimulation=useCallback(function(){if(!runningRef.current){return;}setGrid(function(g){return produce(g,function(gridCopy){var _loop=function _loop(i){var _loop2=function _loop2(k){var neighbors=0;redundant.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),x=_ref2[0],y=_ref2[1];var newI=i+x;var newK=k+y;if(newI>=0&&newK>=0&&newI<numRows&&newK<numCols){neighbors+=g[newI][newK];}});if(neighbors<2||neighbors>3){gridCopy[i][k]=0;}else if(g[i][k]===0&&neighbors===3){gridCopy[i][k]=1;}};for(var k=0;k<numCols;k++){_loop2(k);}};for(var i=0;i<numRows;i++){_loop(i);}});});setTimeout(runSimulation,100);},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setSimulation(!Simulation);if(!Simulation){runningRef.current=true;runSimulation();}}},Simulation?\"Stop\":\"start\",\" Simulation\"),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setGrid(generateEmptyGrid());}},\"Clear\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setGrid(generateRandomStuff());}},\"Random Stuff\")),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"grid\",justifyContent:\"center\",gridTemplateColumns:\"repeat(\".concat(numCols,\", 20px)\")}},grid.map(function(rows,i){return rows.map(function(col,k){return/*#__PURE__*/React.createElement(\"div\",{className:\"table\",onClick:function onClick(){var newGrid=produce(grid,function(gridCopy){gridCopy[i][k]=grid[i][k]?0:1;});setGrid(newGrid);},key:\"\".concat(i,\"-\").concat(k),style:{width:15,height:15,background:grid[i][k]?\"#000\":undefined}});});})),/*#__PURE__*/React.createElement(\"div\",{style:{justifyContent:\"space-between\",textAlign:\"left\"}},/*#__PURE__*/React.createElement(\"ul\",{style:{textAlign:\"left\",marginLeft:\"auto\",marginRight:\"auto\",maxWidth:\"800px\",backgroundColor:\"#000\"}},/*#__PURE__*/React.createElement(\"h2\",null,\"Game Of Life Transitions\"),/*#__PURE__*/React.createElement(\"li\",null,\" \",\"Any live cell with fewer than two live neighbours dies, as if by underpopulation.\"),/*#__PURE__*/React.createElement(\"li\",null,\" \",\"Any live cell with two or three live neighbours lives on to the next generation.\"),/*#__PURE__*/React.createElement(\"li\",null,\" \",\"Any live cell with more than three live neighbours dies, as if by overpopulation.\"),/*#__PURE__*/React.createElement(\"li\",null,\" \",\"Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\"))));}export default App;","map":{"version":3,"sources":["C:/dev/SA/src/components/App.jsx"],"names":["React","useRef","useState","useCallback","produce","numRows","numCols","redundant","App","generateEmptyGrid","rows","i","push","Array","from","grid","setGrid","generateRandomStuff","Math","random","Simulation","setSimulation","runningRef","current","runSimulation","g","gridCopy","k","neighbors","forEach","x","y","newI","newK","setTimeout","display","flexDirection","justifyContent","gridTemplateColumns","map","col","newGrid","width","height","background","undefined","textAlign","marginLeft","marginRight","maxWidth","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback } from \"react\";\nimport produce from \"immer\";\n\nconst numRows = 30;\nconst numCols = 30;\n\nconst redundant = [\n  [0.1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0]\n];\n\nfunction App() {\n  const generateEmptyGrid = () => {\n    const rows = [];\n    for (let i = 0; i < numRows; i++) {\n      rows.push(Array.from(Array(numCols), () => 0));\n    }\n    return rows;\n  };\n\n  const [grid, setGrid] = useState(() => {\n    return generateEmptyGrid();\n  });\n\n  const generateRandomStuff = () => {\n    const rows = [];\n    for (let i = 0; i < numRows; i++) {\n      rows.push(\n        Array.from(Array(numCols), () => (Math.random() > 0.5 ? 1 : 0))\n      );\n    }\n    return rows;\n  };\n\n  const [Simulation, setSimulation] = useState(false);\n\n  const runningRef = useRef(Simulation);\n  runningRef.current = Simulation;\n\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n    setGrid((g) => {\n      return produce(g, (gridCopy) => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            redundant.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              if (newI >= 0 && newK >= 0 && newI < numRows && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n    setTimeout(runSimulation, 100);\n  }, []);\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setSimulation(!Simulation);\n          if (!Simulation) {\n            runningRef.current = true;\n            runSimulation();\n          }\n        }}\n      >\n        {Simulation ? \"Stop\" : \"start\"} Simulation\n      </button>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        }}\n      >\n        <button\n          onClick={() => {\n            setGrid(generateEmptyGrid());\n          }}\n        >\n          Clear\n        </button>\n        <button\n          onClick={() => {\n            setGrid(generateRandomStuff());\n          }}\n        >\n          Random Stuff\n        </button>\n      </div>\n      <div\n        style={{\n          display: \"grid\",\n          justifyContent: \"center\",\n          gridTemplateColumns: `repeat(${numCols}, 20px)`\n        }}\n      >\n        {grid.map((rows, i) =>\n          rows.map((col, k) => (\n            <div\n              className=\"table\"\n              onClick={() => {\n                const newGrid = produce(grid, (gridCopy) => {\n                  gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}\n              key={`${i}-${k}`}\n              style={{\n                width: 15,\n                height: 15,\n                background: grid[i][k] ? \"#000\" : undefined\n              }}\n            ></div>\n          ))\n        )}\n      </div>\n      <div style={{ justifyContent: \"space-between\", textAlign: \"left\" }}>\n        <ul\n          style={{\n            textAlign: \"left\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"800px\",\n            backgroundColor: \"#000\"\n          }}\n        >\n          <h2>Game Of Life Transitions</h2>\n          <li>\n            {\" \"}\n            Any live cell with fewer than two live neighbours dies, as if by\n            underpopulation.\n          </li>\n          <li>\n            {\" \"}\n            Any live cell with two or three live neighbours lives on to the next\n            generation.\n          </li>\n          <li>\n            {\" \"}\n            Any live cell with more than three live neighbours dies, as if by\n            overpopulation.\n          </li>\n          <li>\n            {\" \"}\n            Any dead cell with exactly three live neighbours becomes a live\n            cell, as if by reproduction.\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}